# first i need clone with repository ://git clone repository_url
# and if i need to add new file :// git add . for all file :// git add filename for specific file
# then i need to commit with message :// git commit -m "msg" :// make reference in https://www.conventionalcommits.org/ 
for eg 
if your going to fix any issue message "fix:mentionissue"
if you are going to add any new feature message "feat:mentionfeature"
# then i need to push to remote repository :// git push origin branchname
#if i need to pull the update if any other person pushed code i need to use :// git pull origin main
# if i need to check a current branch :// git branch
# if i need to merge two branch i need to use :// git merge branchname
# if i need to create new branch i need to use :// git branch branchname
# if i need to delete branch i need to use :// git branch -d branchname
# push the newly created branch into github: // git push origin branchname
# if i need to switch branch: // git checkout branchname
# Check the status of the working directory: // git status
# View the commit history:// git log
# Create and switch to a new branch: // git checkout -b new_branchname
# Stage all changes and commit : git commit -am "message"
# Create a tag :// git tag v1.0
# Push tags to the remote repository://git push origin --tags
# Reset 
To unstage changes (but keep the file changes):// git reset HEAD filename
To reset changes in the working directory (discard local changes)://git checkout -- filename
To reset to a specific commit (undo commits but keep changes in working directory)://git reset commit_hash
To hard reset to a specific commit (completely remove commits and changes)://git reset --hard commit_hash


Remove a file from staging (but not from the working directory):
git reset HEAD filename

Discard changes in a file (revert to the last commit version):
git checkout -- filename

Pull changes from the remote repository:
git pull origin branchname

Force push to a branch (be careful with this one):
git push origin branchname --force

View the differences between the working directory and the last commit:
git diff

Stash changes (save changes temporarily without committing):
git stash

Apply stashed changes:
git stash apply

Clear all stashed changes:
git stash clear

Clone a repository with submodules:
git clone --recursive repository_url
